{
  "name": "CometVisu",
  "tagline": "CometVisu homepage",
  "body": "[![Build Status](https://travis-ci.org/CometVisu/CometVisu.svg?branch=develop)](https://travis-ci.org/CometVisu/CometVisu) [![Coverage Status](https://coveralls.io/repos/github/CometVisu/CometVisu/badge.svg?branch=develop)](https://coveralls.io/github/CometVisu/CometVisu?branch=develop)\r\n[![Join the chat at https://gitter.im/CometVisu/CometVisu](https://badges.gitter.im/CometVisu/CometVisu.svg)](https://gitter.im/CometVisu/CometVisu?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\nCometVisu is a real-time visualization software using modern web technologies for\r\nbuilding automation applications like smart homes.\r\n\r\nIt only requires a web browser to display it and a web server as well as a \r\nbackend it can communicate with. The web server can be quite small (routers\r\nshould already have enough power) as it is only serving static content. For \r\nextended features it should support PHP, but that is optional and not required.\r\n\r\nHow to get it:\r\n==============\r\n\r\nThe latest releases can be downloaded at:\r\n\r\n    https://github.com/CometVisu/CometVisu/releases\r\n    \r\nNote: When you own a WireGate the CometVisu comes already pre-installed.\r\nYou will only need to download a new version from GitHub when the shipped version\r\nis outdated (it usually gets updated rather quickly, so try a system update \r\nfirst) or you want to start CometVisu development.\r\n\r\nHow to install it:\r\n==================\r\n\r\nPlease see the [INSTALL](./INSTALL) file.\r\n\r\nDocumentation:\r\n==============\r\n\r\nThe documentation and latest information can be found at:\r\n    \r\nhttp://www.cometvisu.org/\r\n    \r\nSupport:\r\n========\r\n\r\nTo discuss with the developers you can use the the KNX User Forum\r\nat \r\n\r\nhttps://knx-user-forum.de/forum/supportforen/cometvisu\r\n\r\n(spoken languages are German and English)\r\n\r\nPrerequisites:\r\n==============\r\n\r\nThere are currently two different backends widely used: \r\n\r\n1. eibread-cgi / eibwrite-cgi are directly communicating with the eibd / knxd to have direct access to the KNX bus.\r\n2. OpenHAB can also be used as a backend.\r\n\r\nAs extended functionality the diagram plugin can be used. This will require \r\na rrdtool installation with the added \"fetchj\" feature.\r\n\r\n**Notes on the KNX-backend**  \r\nThe KNX-backend uses  \r\n/usr/lib/cgi-bin/l : a dummy-login  \r\n/usr/lib/cgi-bin/r : a symlink to /usr/bin/eibread-cgi  \r\n/usr/lib/cgi-bin/w : a symlink to /usr/bin/eibwrite-cgi  \r\neibread/write-cgi are part of a modified eibd-clients package here:  \r\nhttp://repo.wiregate.de/wiregate/pool/wiregate-1.0/main/e/  \r\n(source: bcusdk)  \r\n\r\n**Important note on diagram-backend**  \r\nIt uses a modified version of rrdtool, adding a \"fetchj\" option.  \r\nYou can find source and Debian-packages here:  \r\nhttp://repo.wiregate.de/wiregate/pool/wiregate-1.0/main/r/  \r\nhttp://repo.wiregate.de/wiregate/pool/wiregate-1.0/main/libr/  ",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}